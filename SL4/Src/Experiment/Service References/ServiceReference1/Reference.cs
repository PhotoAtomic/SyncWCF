//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.235
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 4.0.50826.0
// 
namespace Experiment.ServiceReference1 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IDerivedTestService")]
    public interface IDerivedTestService {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ITestService/Operation", ReplyAction="http://tempuri.org/ITestService/OperationResponse")]
        System.IAsyncResult BeginOperation(int value, System.AsyncCallback callback, object asyncState);
        
        int EndOperation(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ITestService/FaultingOperation", ReplyAction="http://tempuri.org/ITestService/FaultingOperationResponse")]
        System.IAsyncResult BeginFaultingOperation(int value, System.AsyncCallback callback, object asyncState);
        
        int EndFaultingOperation(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ITestService/VoidOperation", ReplyAction="http://tempuri.org/ITestService/VoidOperationResponse")]
        System.IAsyncResult BeginVoidOperation(int value, System.AsyncCallback callback, object asyncState);
        
        void EndVoidOperation(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDerivedTestService/DerivedOperation", ReplyAction="http://tempuri.org/IDerivedTestService/DerivedOperationResponse")]
        System.IAsyncResult BeginDerivedOperation(System.AsyncCallback callback, object asyncState);
        
        void EndDerivedOperation(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IDerivedTestServiceChannel : Experiment.ServiceReference1.IDerivedTestService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class OperationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public OperationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FaultingOperationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public FaultingOperationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DerivedTestServiceClient : System.ServiceModel.ClientBase<Experiment.ServiceReference1.IDerivedTestService>, Experiment.ServiceReference1.IDerivedTestService {
        
        private BeginOperationDelegate onBeginOperationDelegate;
        
        private EndOperationDelegate onEndOperationDelegate;
        
        private System.Threading.SendOrPostCallback onOperationCompletedDelegate;
        
        private BeginOperationDelegate onBeginFaultingOperationDelegate;
        
        private EndOperationDelegate onEndFaultingOperationDelegate;
        
        private System.Threading.SendOrPostCallback onFaultingOperationCompletedDelegate;
        
        private BeginOperationDelegate onBeginVoidOperationDelegate;
        
        private EndOperationDelegate onEndVoidOperationDelegate;
        
        private System.Threading.SendOrPostCallback onVoidOperationCompletedDelegate;
        
        private BeginOperationDelegate onBeginDerivedOperationDelegate;
        
        private EndOperationDelegate onEndDerivedOperationDelegate;
        
        private System.Threading.SendOrPostCallback onDerivedOperationCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public DerivedTestServiceClient() {
        }
        
        public DerivedTestServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DerivedTestServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DerivedTestServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DerivedTestServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<OperationCompletedEventArgs> OperationCompleted;
        
        public event System.EventHandler<FaultingOperationCompletedEventArgs> FaultingOperationCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> VoidOperationCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DerivedOperationCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Experiment.ServiceReference1.IDerivedTestService.BeginOperation(int value, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginOperation(value, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        int Experiment.ServiceReference1.IDerivedTestService.EndOperation(System.IAsyncResult result) {
            return base.Channel.EndOperation(result);
        }
        
        private System.IAsyncResult OnBeginOperation(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int value = ((int)(inValues[0]));
            return ((Experiment.ServiceReference1.IDerivedTestService)(this)).BeginOperation(value, callback, asyncState);
        }
        
        private object[] OnEndOperation(System.IAsyncResult result) {
            int retVal = ((Experiment.ServiceReference1.IDerivedTestService)(this)).EndOperation(result);
            return new object[] {
                    retVal};
        }
        
        private void OnOperationCompleted(object state) {
            if ((this.OperationCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OperationCompleted(this, new OperationCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OperationAsync(int value) {
            this.OperationAsync(value, null);
        }
        
        public void OperationAsync(int value, object userState) {
            if ((this.onBeginOperationDelegate == null)) {
                this.onBeginOperationDelegate = new BeginOperationDelegate(this.OnBeginOperation);
            }
            if ((this.onEndOperationDelegate == null)) {
                this.onEndOperationDelegate = new EndOperationDelegate(this.OnEndOperation);
            }
            if ((this.onOperationCompletedDelegate == null)) {
                this.onOperationCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOperationCompleted);
            }
            base.InvokeAsync(this.onBeginOperationDelegate, new object[] {
                        value}, this.onEndOperationDelegate, this.onOperationCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Experiment.ServiceReference1.IDerivedTestService.BeginFaultingOperation(int value, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginFaultingOperation(value, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        int Experiment.ServiceReference1.IDerivedTestService.EndFaultingOperation(System.IAsyncResult result) {
            return base.Channel.EndFaultingOperation(result);
        }
        
        private System.IAsyncResult OnBeginFaultingOperation(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int value = ((int)(inValues[0]));
            return ((Experiment.ServiceReference1.IDerivedTestService)(this)).BeginFaultingOperation(value, callback, asyncState);
        }
        
        private object[] OnEndFaultingOperation(System.IAsyncResult result) {
            int retVal = ((Experiment.ServiceReference1.IDerivedTestService)(this)).EndFaultingOperation(result);
            return new object[] {
                    retVal};
        }
        
        private void OnFaultingOperationCompleted(object state) {
            if ((this.FaultingOperationCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.FaultingOperationCompleted(this, new FaultingOperationCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void FaultingOperationAsync(int value) {
            this.FaultingOperationAsync(value, null);
        }
        
        public void FaultingOperationAsync(int value, object userState) {
            if ((this.onBeginFaultingOperationDelegate == null)) {
                this.onBeginFaultingOperationDelegate = new BeginOperationDelegate(this.OnBeginFaultingOperation);
            }
            if ((this.onEndFaultingOperationDelegate == null)) {
                this.onEndFaultingOperationDelegate = new EndOperationDelegate(this.OnEndFaultingOperation);
            }
            if ((this.onFaultingOperationCompletedDelegate == null)) {
                this.onFaultingOperationCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnFaultingOperationCompleted);
            }
            base.InvokeAsync(this.onBeginFaultingOperationDelegate, new object[] {
                        value}, this.onEndFaultingOperationDelegate, this.onFaultingOperationCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Experiment.ServiceReference1.IDerivedTestService.BeginVoidOperation(int value, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginVoidOperation(value, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Experiment.ServiceReference1.IDerivedTestService.EndVoidOperation(System.IAsyncResult result) {
            base.Channel.EndVoidOperation(result);
        }
        
        private System.IAsyncResult OnBeginVoidOperation(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int value = ((int)(inValues[0]));
            return ((Experiment.ServiceReference1.IDerivedTestService)(this)).BeginVoidOperation(value, callback, asyncState);
        }
        
        private object[] OnEndVoidOperation(System.IAsyncResult result) {
            ((Experiment.ServiceReference1.IDerivedTestService)(this)).EndVoidOperation(result);
            return null;
        }
        
        private void OnVoidOperationCompleted(object state) {
            if ((this.VoidOperationCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.VoidOperationCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void VoidOperationAsync(int value) {
            this.VoidOperationAsync(value, null);
        }
        
        public void VoidOperationAsync(int value, object userState) {
            if ((this.onBeginVoidOperationDelegate == null)) {
                this.onBeginVoidOperationDelegate = new BeginOperationDelegate(this.OnBeginVoidOperation);
            }
            if ((this.onEndVoidOperationDelegate == null)) {
                this.onEndVoidOperationDelegate = new EndOperationDelegate(this.OnEndVoidOperation);
            }
            if ((this.onVoidOperationCompletedDelegate == null)) {
                this.onVoidOperationCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnVoidOperationCompleted);
            }
            base.InvokeAsync(this.onBeginVoidOperationDelegate, new object[] {
                        value}, this.onEndVoidOperationDelegate, this.onVoidOperationCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Experiment.ServiceReference1.IDerivedTestService.BeginDerivedOperation(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDerivedOperation(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Experiment.ServiceReference1.IDerivedTestService.EndDerivedOperation(System.IAsyncResult result) {
            base.Channel.EndDerivedOperation(result);
        }
        
        private System.IAsyncResult OnBeginDerivedOperation(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((Experiment.ServiceReference1.IDerivedTestService)(this)).BeginDerivedOperation(callback, asyncState);
        }
        
        private object[] OnEndDerivedOperation(System.IAsyncResult result) {
            ((Experiment.ServiceReference1.IDerivedTestService)(this)).EndDerivedOperation(result);
            return null;
        }
        
        private void OnDerivedOperationCompleted(object state) {
            if ((this.DerivedOperationCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DerivedOperationCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DerivedOperationAsync() {
            this.DerivedOperationAsync(null);
        }
        
        public void DerivedOperationAsync(object userState) {
            if ((this.onBeginDerivedOperationDelegate == null)) {
                this.onBeginDerivedOperationDelegate = new BeginOperationDelegate(this.OnBeginDerivedOperation);
            }
            if ((this.onEndDerivedOperationDelegate == null)) {
                this.onEndDerivedOperationDelegate = new EndOperationDelegate(this.OnEndDerivedOperation);
            }
            if ((this.onDerivedOperationCompletedDelegate == null)) {
                this.onDerivedOperationCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDerivedOperationCompleted);
            }
            base.InvokeAsync(this.onBeginDerivedOperationDelegate, null, this.onEndDerivedOperationDelegate, this.onDerivedOperationCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override Experiment.ServiceReference1.IDerivedTestService CreateChannel() {
            return new DerivedTestServiceClientChannel(this);
        }
        
        private class DerivedTestServiceClientChannel : ChannelBase<Experiment.ServiceReference1.IDerivedTestService>, Experiment.ServiceReference1.IDerivedTestService {
            
            public DerivedTestServiceClientChannel(System.ServiceModel.ClientBase<Experiment.ServiceReference1.IDerivedTestService> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginOperation(int value, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = value;
                System.IAsyncResult _result = base.BeginInvoke("Operation", _args, callback, asyncState);
                return _result;
            }
            
            public int EndOperation(System.IAsyncResult result) {
                object[] _args = new object[0];
                int _result = ((int)(base.EndInvoke("Operation", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginFaultingOperation(int value, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = value;
                System.IAsyncResult _result = base.BeginInvoke("FaultingOperation", _args, callback, asyncState);
                return _result;
            }
            
            public int EndFaultingOperation(System.IAsyncResult result) {
                object[] _args = new object[0];
                int _result = ((int)(base.EndInvoke("FaultingOperation", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginVoidOperation(int value, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = value;
                System.IAsyncResult _result = base.BeginInvoke("VoidOperation", _args, callback, asyncState);
                return _result;
            }
            
            public void EndVoidOperation(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("VoidOperation", _args, result);
            }
            
            public System.IAsyncResult BeginDerivedOperation(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("DerivedOperation", _args, callback, asyncState);
                return _result;
            }
            
            public void EndDerivedOperation(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("DerivedOperation", _args, result);
            }
        }
    }
}
